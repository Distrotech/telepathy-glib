# To be included by Makefile.am.

ABI_LISTS = \
    versions/core-1.0.abi \
    versions/dbus-1.0.abi \
    versions/main-1.0.abi \
    $(NULL)

# The quoting here is unnecessary but harmless, and has the useful side-effect
# that vim quickfix mode (:make) doesn't interpret the libtool --mode=link
# command as an error message in a bizarrely named file
#
# libtelepathy-glib-core shares its Libtool versioning with libtelepathy-glib:
# they are intended to be upgraded in lockstep, and always break ABI at the
# same time.
libtelepathy_glib_1_core_la_LDFLAGS = \
    $(AM_LDFLAGS) \
    -no-undefined \
    -version-info "$(LT_CURRENT)":"$(LT_REVISION)":"$(LT_AGE)" \
    $(NULL)
libtelepathy_glib_1_core_la_LIBADD = libtelepathy-glib-core-internal.la
nodist_libtelepathy_glib_1_core_la_SOURCES =
libtelepathy_glib_1_core_la_DEPENDENCIES = \
    libtelepathy-glib-core-internal.la \
    abi.am \
    $(NULL)

libtelepathy_glib_1_dbus_la_LDFLAGS = \
    $(AM_LDFLAGS) \
    -no-undefined \
    -version-info "$(LT_DBUS_CURRENT)":"$(LT_DBUS_REVISION)":"$(LT_DBUS_AGE)" \
    $(NULL)
libtelepathy_glib_1_dbus_la_LIBADD = libtelepathy-glib-dbus-internal.la
nodist_libtelepathy_glib_1_dbus_la_SOURCES =
libtelepathy_glib_1_dbus_la_DEPENDENCIES = \
    libtelepathy-glib-dbus-internal.la \
    abi.am \
    $(NULL)

libtelepathy_glib_1_la_LDFLAGS = \
    $(AM_LDFLAGS) \
    -no-undefined \
    -version-info "$(LT_CURRENT)":"$(LT_REVISION)":"$(LT_AGE)" \
    $(NULL)
libtelepathy_glib_1_la_LIBADD = libtelepathy-glib-main-internal.la
nodist_libtelepathy_glib_1_la_SOURCES =
libtelepathy_glib_1_la_DEPENDENCIES = \
    libtelepathy-glib-main-internal.la \
    abi.am \
    $(NULL)

if HAVE_LD_VERSION_SCRIPT
nodist_libtelepathy_glib_1_la_SOURCES += \
    _gen/main-version-script.txt \
    $(NULL)
nodist_libtelepathy_glib_1_dbus_la_SOURCES += \
    _gen/dbus-version-script.txt \
    $(NULL)
nodist_libtelepathy_glib_1_core_la_SOURCES += \
    _gen/core-version-script.txt \
    $(NULL)
libtelepathy_glib_1_la_DEPENDENCIES += \
    _gen/main-version-script.txt \
    _gen/main-abi.txt \
    $(NULL)
libtelepathy_glib_1_dbus_la_DEPENDENCIES += \
    _gen/dbus-version-script.txt \
    _gen/dbus-abi.txt \
    $(NULL)
libtelepathy_glib_1_core_la_DEPENDENCIES += \
    _gen/core-version-script.txt \
    _gen/core-abi.txt \
    $(NULL)

# Always allow undocumented ABI for now
# will be "if OFFICIAL_RELEASE" eventually
if FALSE
# don't allow undocumented ABI
MAKE_VERSION_SCRIPT_FLAGS =
else
# allow new ABI, and silently put it in a dummy version (which can be used to
# check whether binaries have been linked against unguaranteed ABI)
MAKE_VERSION_SCRIPT_FLAGS = \
    --unreleased-version=TELEPATHY_GLIB$${SUFFIX}_@VERSION@_UNRELEASED
endif

_gen/%-version-script.txt: \
    $(ABI_LISTS) \
    _gen/%-abi.txt \
    abi.am \
    $(top_srcdir)/tools/make-version-script.py \
    $(NULL)
	$(AM_V_GEN)set -e; \
	if test "$*" = main; then SUFFIX=""; else SUFFIX="_$*"; fi; \
	$(PYTHON) $(top_srcdir)/tools/make-version-script.py \
		 --symbols=_gen/$*-abi.txt $(MAKE_VERSION_SCRIPT_FLAGS) \
		 $(patsubst %,$(srcdir)/%,$(filter versions/$*-%,$(ABI_LISTS))) > $@
	$(AM_V_GEN)set -e; \
	if test "$*" = main; then suffix=""; else suffix="-$*"; fi; \
	if test "$*" = main; then SUFFIX=""; else SUFFIX="_$*"; fi; \
	if test "$${suffix}" = ""; then binpkg="libtelepathy-glib-1-0"; \
		else binpkg="libtelepathy-glib-1$${suffix}0"; fi; \
	$(PYTHON) $(top_srcdir)/tools/make-version-script.py \
		 --symbols=_gen/$*-abi.txt $(MAKE_VERSION_SCRIPT_FLAGS) \
		 --dpkg "libtelepathy-glib-1$${suffix}.so.0 $${binpkg} #MINVER#" \
		 --dpkg-build-depends-package "libtelepathy-glib-1-dev" \
		 $(patsubst %,$(srcdir)/%,$(filter versions/$*-%,$(ABI_LISTS))) \
		 > _gen/$${binpkg}.symbols
	sed -n -e "s/^[	 ]*\\(tp_.*\\);/\\1/p" < $@ > _gen/$*-versioned-abi.tmp
	sort -u < _gen/$*-versioned-abi.tmp > _gen/$*-versioned-abi.txt
	: # the versioned API should always match the ^tp API
	diff -c _gen/$*-versioned-abi.txt _gen/$*-abi.txt

_gen/%-abi.txt: libtelepathy-glib-%-internal.la abi.am
	$(NM) .libs/libtelepathy-glib-$*-internal.a > _gen/abi.nm
	grep " [DT] " < _gen/abi.nm > _gen/abi.funcs || test $$? = 1
	cut -d" " -f3 < _gen/abi.funcs > _gen/abi.funcnames
	grep "^tp" < _gen/abi.funcnames > _gen/abi.tpfuncnames || test $$? = 1
	$(AM_V_GEN)sort -u < _gen/abi.tpfuncnames > $@

libtelepathy_glib_1_la_LDFLAGS += \
    $(VERSION_SCRIPT_ARG)=_gen/main-version-script.txt

libtelepathy_glib_1_dbus_la_LDFLAGS += \
    $(VERSION_SCRIPT_ARG)=_gen/dbus-version-script.txt

libtelepathy_glib_1_core_la_LDFLAGS += \
    $(VERSION_SCRIPT_ARG)=_gen/core-version-script.txt

else # !HAVE_LD_VERSION_SCRIPT

libtelepathy_glib_1_core_la_LDFLAGS += -export-symbols-regex '^tp'
libtelepathy_glib_1_dbus_la_LDFLAGS += -export-symbols-regex '^tp'
libtelepathy_glib_1_la_LDFLAGS += -export-symbols-regex '^tp'

endif # !HAVE_LD_VERSION_SCRIPT

# vim:set ft=automake:
